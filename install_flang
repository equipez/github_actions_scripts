#!/usr/bin/env bash
# Usage: bash install_flang

REPO_NAME="flang"
GIT_ADDR="https://github.com/zaikunzhang/$REPO_NAME.git"
TMP_DIR="$(mktemp -d)"

# If this is not a GitHub-hosted runner, we first check whether flang is already installed in the
# default directory $FLANG_DFT. If it is, we skip the installation. Otherwise, we install flang to
# the temporary directory $FLANG_DIR defined below. Why not install flang to $FLANG_DFT? Because we
# prefer to install it in a temporary directory to avoid polluting the default directory.
FLANG_DFT="$HOME/local/flang"

if [[ "$GITHUB_ACTIONS" != "true" || "$RUNNER_ENVIRONMENT" != "github-hosted" ]]; then
    # We assume that ncurses are already installed on self-hosted runners.
    printf "\nThe runner is not hosted by GitHub. Skip installation of ncurses.\n"
    if [[ -d $FLANG_DFT && -f $FLANG_DFT/bin/flang && -f $FLANG_DFT/bin/flang ]] ;then
        echo "PATH=$PATH:$FLANG_DFT/bin" >> "$GITHUB_ENV"
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$FLANG_DFT/lib" >> "$GITHUB_ENV"
        printf "\nflang is already installed. Skip installation.\n"
        exit 0
    fi
else
    if [[ "$RUNNER_OS" == "Linux" ]] ; then
        sudo apt update && sudo apt install libncurses* # libncurses* needed for libtinfo.so
    elif [[ "$RUNNER_OS" == "macOS" ]] ; then
        brew install ncurses
    fi
fi

PI_MODEL_FILE="/sys/firmware/devicetree/base/model"
if [[ -f "$PI_MODEL_FILE" ]]  && grep -qi 'Raspberry Pi' < "$PI_MODEL_FILE" ; then  # Raspberry Pi
    ARCH=aarch64
elif [[ $(uname -s) == 'Darwin' ]] ; then  # macOS
    ARCH=macos_86
else  # Linux
    ARCH=x86_64
fi

# Clone the flang repository to the temporary directory
git clone "$GIT_ADDR" "$TMP_DIR/$REPO_NAME"
FLANG_ARCHIVE="$TMP_DIR/$REPO_NAME/$ARCH/flang.tar.xz"

# Decompress the flang archive
mkdir -p "$HOME"/tmp
FLANG_DIR=$(mktemp -d -p "$HOME"/tmp/)
cat "${FLANG_ARCHIVE}".* | tar -xJ --directory "$FLANG_DIR"
FLANG_DIR="$FLANG_DIR/flang"

# Remove the temporary directory
rm -rf "$TMP_DIR"

# Set environment variable for subsequent steps
# N.B.: The following lines will not work if this script is invoked with sudo.
# Put flang/bin to the beginning of PATH, in case there is another flang in PATH, e.g., from AOCC.
echo "PATH=$FLANG_DIR/bin:$PATH" >> "$GITHUB_ENV"
echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$FLANG_DIR/lib" >> "$GITHUB_ENV"

# Show the result of the installation.
export PATH=$FLANG_DIR/bin:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$FLANG_DIR/lib
echo "The flang installed is:"
flang --version
echo "The path to flang is:"
command -v flang
